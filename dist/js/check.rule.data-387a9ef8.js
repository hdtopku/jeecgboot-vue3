import{render as c}from"./renderUtils-8f70b6f9.js";import{d as u}from"./user.api-41a142ff.js";import{b as r}from"./jeecg-online-vendor-88d7be55.js";import{ab as d}from"./antd-vue-vendor-cce59da1.js";const k="sys/checkRule/exportXls",R="sys/checkRule/importExcel",C=e=>r.get({url:"/sys/checkRule/list",params:e}),b=(e,t)=>r.delete({url:"/sys/checkRule/delete",data:e},{joinParamsToUrl:!0}).then(()=>{t()}),I=(e,t)=>{d.confirm({title:"确认删除",content:"是否删除选中数据",okText:"确认",cancelText:"取消",onOk:()=>r.delete({url:"/sys/checkRule/deleteBatch",data:e},{joinParamsToUrl:!0}).then(()=>{t()})})},i=(e,t)=>{t=encodeURIComponent(t);let s={ruleCode:e,value:t};return r.get({url:"/sys/checkRule/checkByCode",params:s},{isTransformResponse:!1})},y=e=>r.post({url:"/sys/checkRule/add",params:e}),g=e=>r.put({url:"/sys/checkRule/edit",params:e}),P=[{title:"规则名称",dataIndex:"ruleName",width:200,align:"center"},{title:"规则编码",dataIndex:"ruleCode",width:200,align:"center"},{title:"规则描述",dataIndex:"ruleDescription",width:300,align:"center",customRender:function({text:e}){return c.renderTip(e,30)}}],x=[{field:"ruleName",label:"规则名称",component:"Input",colProps:{span:6}},{field:"ruleCode",label:"规则编码",component:"Input",colProps:{span:6}}],w=[{label:"",field:"id",component:"Input",show:!1},{field:"ruleName",label:"规则名称",component:"Input",required:!0,colProps:{span:24}},{field:"ruleCode",label:"规则编码",component:"Input",colProps:{span:24},dynamicDisabled:({values:e})=>!!e.id,dynamicRules:({model:e})=>[{required:!0,validator:(t,s)=>new Promise((o,n)=>{if(!s)return n("请输入规则编码！");let a={tableName:"sys_check_rule",fieldName:"rule_code",fieldVal:s,dataId:e.id};u(a).then(l=>{l.success?o():n("规则编码已存在!")}).catch(l=>{n(l.message||"校验失败")})})}]},{field:"ruleDescription",label:"规则描述",colProps:{span:24},component:"InputTextArea",componentProps:{placeholder:"请输入规则描述",rows:2}}],T=[{label:"123",field:"ruleCode",component:"Input",show:!1},{field:"testValue",label:"需要测试的值:",component:"Input",componentProps:({formModel:e})=>({onChange:t=>{e.testValue=t.target.value}}),dynamicRules:({model:e})=>{const{ruleCode:t}=e;return[{required:!1,validator:(s,o)=>new Promise((n,a)=>{t&&o?i(t,o).then(l=>{l.success?n():a(l.message)}).catch(l=>{a(l.message||l)}):n()})}]}}];export{P as a,x as b,T as c,I as d,k as e,w as f,C as g,b as h,R as i,y as s,g as u};
