var y=(e,a,t)=>new Promise((o,u)=>{var i=n=>{try{l(t.next(n))}catch(r){u(r)}},s=n=>{try{l(t.throw(n))}catch(r){u(r)}},l=n=>n.done?o(n.value):Promise.resolve(n.value).then(i,s);l((t=t.apply(e,a)).next())});import{a as v}from"./jeecg-online-vendor-7e3ae2e6.js";import"./antd-vue-vendor-31afcf32.js";import"./vue-249e5fad.js";import"./tinymce-vendor-676f8393.js";import"./lodash-es-vendor-c1987ca1.js";const c=Symbol();function $(e,a,t,o,u){return y(this,null,function*(){if(!(e&&typeof e=="function"))throw`validate 参数需要的是一个方法，而传入的却是${typeof e}`;let i={},s=yield new Promise((n,r)=>{e().then(()=>{for(let f in a)a[f]instanceof Array&&v(o,f)==="string"&&(a[f]=a[f].join(","));n(a)}).catch(()=>{r({error:c})})});Object.assign(i,{formValue:s});let l=yield T(t,u);return i=Object.assign(i,{tablesValue:l}),i})}function T(e,a=!0){if(!(e instanceof Array))throw`'validateTables'函数的'cases'参数需要的是一个数组，而传入的却是${typeof e}`;return new Promise((t,o)=>{let u=[],i=0;(!e||e.length===0)&&t(u),function s(){let l=e[i];l.value.validateTable().then(n=>{if(!n)u[i]={tableData:l.value.getTableData()},++i===e.length?t(u):s();else{let r,f=b(l.value,"ATabPane");if(f&&(r=f.$.vnode.key,a)){let p=b(f,"Tabs");p&&p.setActiveKey&&p.setActiveKey(r)}o({error:c,index:i,paneKey:r,errMap:n})}})}()})}function b(e,a){let t=e.$parent;if(t&&t.$options){if(t.$options.name===a)return t;{let o=b(t,a);if(o)return o}}return null}export{c as VALIDATE_FAILED,b as getVmParentByName,$ as validateFormModelAndTables,T as validateTables};
