var e=Object.defineProperty,t=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable,r=(t,a,i)=>a in t?e(t,a,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[a]=i,s=(e,t,a)=>new Promise(((i,r)=>{var s=e=>{try{l(a.next(e))}catch(t){r(t)}},o=e=>{try{l(a.throw(e))}catch(t){r(t)}},l=e=>e.done?i(e.value):Promise.resolve(e.value).then(s,o);l((a=a.apply(e,t)).next())}));import{B as o}from"./index.e1e06dd6.js";import{B as l}from"./BasicForm.d9f6c231.js";import"./helper.1c9dc9a5.js";import{u as n}from"./useForm.45d68074.js";import"./JAddInput.8c125e2c.js";import{l as d,o as u,L as c,F as p,bH as m,dz as f,t as y,v as b,V as v,z as g,y as h,B as j,aR as w}from"./index.435ab247.js";import{f as x,u as R,s as k}from"./check.rule.data.85e54f2d.js";import"./BasicModal.c66de981.js";import"./useWindowSizeFn.3d5b1a05.js";import"./uniqBy.91f18935.js";import"./useFormItem.816007c4.js";import"./functional.be5901d6.js";import"./download.5dc68cfb.js";import"./base64Conver.030fa32c.js";import"./index.a5502478.js";import"./index.64086148.js";import"./useCountdown.adc4ab77.js";import"./JUpload.e164672b.js";import"./api.bc301b0f.js";import"./index.cdc49bf1.js";import"./props.5467b933.js";import"./index.713dc63d.js";import"./bem.0e923c54.js";import"./props.37836c63.js";import"./useContextMenu.82ce6d89.js";import"./index.e1ec35e6.js";import"./onMountedOrActivated.e9ddbd41.js";import"./index.627c6cd3.js";import"./htmlmixed.749cbc8c.js";import"./vue.f62dfd4a.js";/* empty css             */import"./depart.api.c07add53.js";import"./renderUtils.06416dce.js";import"./user.api.f3bf5333.js";const O=d({__name:"CheckRuleModal",emits:["register","success"],setup(e,{emit:d}){const O=u((()=>c(S)?"编辑":"新增")),S=p(!0),[_,{resetFields:F,setFieldsValue:B,validate:J,getFieldsValue:P}]=n({schemas:x,showActionButtonGroup:!1}),q=p("1");let A=p([]),M=p([]);const[V,{setModalProps:C,closeModal:I}]=m((e=>s(this,null,(function*(){if(yield F(),C({confirmLoading:!1}),S.value=!!(null==e?void 0:e.isUpdate),q.value="1",A.value=[],M.value=[],c(S)){yield B(((e,s)=>{for(var o in s||(s={}))a.call(s,o)&&r(e,o,s[o]);if(t)for(var o of t(s))i.call(s,o)&&r(e,o,s[o]);return e})({},e.record));let s=e.record.ruleJson;if(s){let e=JSON.parse(s),t=[],a=[],i="1";e.forEach((e=>{"*"===e.digits?t.push(Object.assign(e,{priority:i})):(i="0",a.push(e))})),A.value=a,M.value=t}}})))),L=p(),N=p();function T(e,t){return new Promise(((a,i)=>{e.value.validateTable().then((r=>{if(r)q.value=t,i();else{const t=e.value.getTableData();a(t)}}))}))}function $(){return s(this,null,(function*(){let e,t=[],a=[];J().then((t=>(e=t,T(L,"1")))).then((e=>(e&&e.length>0&&(a=e),T(N,"2")))).then((i=>{i&&i.length>0&&(t=i);let r=[],o=[];for(let e=0;e<t.length;e++){let a=t[e];a.digits="*","1"===a.priority?r.push(a):o.push(a)}let l=r.concat(a).concat(o).map((e=>w(e,"digits","pattern","message"))),n=JSON.stringify(l);!function(e){s(this,null,(function*(){try{C({confirmLoading:!0}),S.value?yield R(e):yield k(e),I(),d("success")}finally{C({confirmLoading:!1})}}))}(Object.assign({},e,{ruleJson:n}))})).catch((()=>{C({confirmLoading:!1})}))}))}const U=({cellValue:e},t)=>{try{new RegExp(e),t(!0)}catch(a){t(!1,"请输入正确的正则表达式")}},W=p([{title:"位数",key:"digits",type:f.inputNumber,minWidth:180,validateRules:[{required:!0,message:"${title}不能为空"},{pattern:/^[1-9]\d*$/,message:"请输入零以上的正整数"}]},{title:"规则（正则表达式）",key:"pattern",minWidth:320,type:f.input,validateRules:[{required:!0,message:"规则不能为空"},{handler:U}]},{title:"提示文本",key:"message",minWidth:180,type:f.input,validateRules:[{required:!0,message:"${title}不能为空"}]}]),z=p([{title:"优先级",key:"priority",type:f.select,defaultValue:"1",options:[{title:"优先运行",value:"1"},{title:"最后运行",value:"0"}],validateRules:[]},{title:"规则（正则表达式）",key:"pattern",width:"40%",type:f.input,validateRules:[{required:!0,message:"规则不能为空"},{handler:U}]},{title:"提示文本",key:"message",width:"20%",type:f.input,validateRules:[{required:!0,message:"${title}不能为空"}]}]);return(e,t)=>{const a=y("a-alert"),i=y("JVxeTable"),r=y("a-tab-pane"),s=y("a-tabs");return b(),v(c(o),j(e.$attrs,{onRegister:c(V),onOk:$,title:c(O),width:1200,destroyOnClose:""}),{default:g((()=>[h(c(l),{onRegister:c(_)},null,8,["onRegister"]),h(s,{activeKey:q.value,"onUpdate:activeKey":t[0]||(t[0]=e=>q.value=e),animated:""},{default:g((()=>[h(r,{tab:"局部规则",key:"1",forceRender:!0},{default:g((()=>[h(i,{ref_key:"vTable1",ref:L,toolbar:"",rowNumber:"",dragSort:"",rowSelection:"",maxHeight:580,dataSource:c(A),columns:W.value},{toolbarAfter:g((()=>[h(a,{type:"info",showIcon:"",message:"局部规则按照你输入的位数有序的校验",style:{"margin-bottom":"8px"}})])),_:1},8,["dataSource","columns"])])),_:1}),h(r,{tab:"全局规则",key:"2",forceRender:!0},{default:g((()=>[h(i,{ref_key:"vTable2",ref:N,toolbar:"",rowNumber:"",dragSort:"",rowSelection:"",maxHeight:580,dataSource:c(M),addSetActive:!1,columns:z.value},{toolbarAfter:g((()=>[h(a,{type:"info",showIcon:"",message:"全局规则可校验用户输入的所有字符；全局规则的优先级比局部规则的要高。",style:{"margin-bottom":"8px"}})])),_:1},8,["dataSource","columns"])])),_:1})])),_:1},8,["activeKey"])])),_:1},16,["onRegister","title"])}}});export{O as default};
